- id: 553bba47-503a-475b-a169-0319e819437b
  name: Create a `Cylinder` Class
  description: |+
    1. Define a `Cylinder` class, its constructor (`__init__`) should take two arguments:
      - `height`
      - `radius`, which has a default value of 1

    2. The class has four attributes:
     - `height`
     - `radius`
     - `surface_area`, initialised as `None`
     - `volume`, initialised as `None`

    3. It should also have two methods:
     - `get_surface_area`: This method updates the attribute `surface_area`, and it returns the value rounded to 2dp.
     - `get_volume`: This method updates the attribute `volume`, and it returns the value rounded to 2dp.

    4. Use Google to find the formulae for surface area and volume of a cylinder. Use the formulae to create method definitions for these.
    5. Now, instead of initialising `surface_area` and `volume` to `None`, initialise them to the value returned by `get_surface_area` and `get_volume` respectively.


- id: 3d289cbe-8683-4a96-8028-c7a8bdd4f77c
  name: Create a `Car` Class
  description: |+
    1. Create a `Car` class
    2. Define the constructor for the class:
      - It takes in two arguments (other than `self`), and assign their values as attributes of the instance:
          - One called `model` (e.g. Tesla), which has no default
          - One called `year`, which is an integer, which defaults to the current year (just hard code the current year in)
      - It also defines a new attribute (remember that is not passed as an argument):
          - One called `miles_driven`, which is set to zero
    3. Create a method called `drive`
        - It prints "vroom" and increment the instance's `miles_driven` attribute by 1
    4. Create a method called `info`
        - It prints the number of miles driven, the model name and the year
    5. Initialiase the class
    6. Call all the methods

- id: 7dde34f0-1275-42ff-90e5-0032a42b557d
  name: Make Calls with a `Phone` Class
  description: |+
    1. Create a `Phone` class
    2. The class takes two arguments:
      - One called `number` (e.g. 07777777777), which has no default. This is the phone number of the phone and will be used as an attribute
      - One called `balance`, which is an integer, which defaults to 20. This is the balance of the phone and will be used as an attribute
    3. Create a method called `call`
      - It takes two arguments:
        - One called `number` (e.g. 07777777777), which has no default. This is the phone number of the person being called
        - One called `duration`, which is an integer, which defaults to 1. This is the duration of the call in minutes
      - Inside the method, check if the balance is greater than or equal to the duration of the call. If it is, then:
        - Print "Calling {number} for {duration} minutes"
        - Subtract the duration from the balance
      - If the balance is not greater than or equal to the duration of the call, then:
        - Print "Insufficient balance"
    4. Create a method called `info`
      - It prints the phone number and the balance

