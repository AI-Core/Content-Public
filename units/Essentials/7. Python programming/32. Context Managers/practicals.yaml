- id: d20a82fa-1b08-4910-a8e2-5cd833b0091b
  name: Create a Text File Using Context Managers
  description: |+
    1. Create a new file called `context_manager.py`
    2. In `context_manager.py`, create a context manager that opens a file called `test.txt` in write mode and writes the message "Hello, I am a context manager!" to the file.
    3. You should see the message "Hello, I am a context manager!" in the file `test.txt`

    If you don't close the file, you might not be able to open it again!

    You can also read the file using context managers.

    4. In `context_manager.py`, create a context manager that opens the file `test.txt` in read mode and prints the contents of the file
    5. Test that it works by running `python context_manager.py` in the terminal.
    6. You should see the message "Hello, I am a context manager!" printed in the terminal

- id: d714acce-9251-44d8-9d69-e640ccbcb0dd
  name: Creating Pickle Files
  description: |+
    Pickle files are a convenient way to store Python objects. You can read more about them [here](https://docs.python.org/3/library/pickle.html).

    Create a script that stores a dictionary in a pickle file and then read it back into Python.

    1. Create a new file called `pickle_dict.py`
    2. In `pickle_dict.py`, import `pickle`
    3. Create a dictionary called `my_dict` with the keys `a`, `b`, and `c` and the values `1`, `2`, and `3`
    4. Create a context manager that opens a file called `my_dict.pkl` in write mode and writes `my_dict` to the file.
    5. You should see a file called `my_dict.pkl` in your directory. If you try to open it, you will see a bunch of gibberish. This is because it is a pickle file and not a text file.

    You can read the contents of the pickle file back into Python.

    6. Create a new file called `read_pickle_dict.py`
    7. In `read_pickle_dict.py`, import `pickle`
    8. Create a context manager that opens the file `my_dict.pkl` in read mode and reads the contents of the file into a variable called `my_dict`
    9. Print `my_dict`. You should see the dictionary printed.

